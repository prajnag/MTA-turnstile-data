[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring the Pulse of the City: Insights from MTA Turnstile Data",
    "section": "",
    "text": "1 Introduction\nIn the heart of New York City, the subway is more than just a mode of transportation; it’s the lifeline that connects the vibrant communities of this bustling metropolis. Our fascination with this network led us to choose the MTA Turnstile Data for our project. This dataset is not just numbers and statistics; it’s a narrative of the city’s rhythm, reflecting the daily hustle and flow of its inhabitants. By analyzing this data, we aim to uncover the patterns of subway usage, identify peak travel periods, and understand station popularity. These insights are crucial for urban planners, policymakers, and everyday commuters. The questions driving this study include:\nWhich stations see the highest foot traffic? How do subway traffic patterns vary across different days of the week? What are the busiest boroughs? What are the busiest stations during peak travel times?\nThis project is a journey through the veins of New York City, decoding the pulse of its subway system."
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\n\n2.1.1 Research Plan\n1. Data Import and Cleaning: - We will import the MTA Turnstile dataset into R utilizing the readr package for seamless data reading. - We will carry out preliminary cleaning to maintain data quality. This includes addressing missing values, verifying and correcting data types, and resolving any anomalies resulting from maintenance or special events. - We will also validate the integrity of the pre-applied filters to ensure the dataset’s relevance to our analysis.\n2. Exploratory Data Analysis (EDA): - Utilizing dplyr for data wrangling and ggplot2 for visualization, we will conduct an initial exploration to grasp the dataset’s structure and content. - We will generate summary statistics that will aid in understanding the distribution of ridership and spotlighting any immediate patterns or outliers within the data.\n3. Traffic Analysis by Stations and Boroughs: - Data will be summarized by stations using R’s aggregation functions to pinpoint those with the most significant foot traffic. - A borough-level analysis will be performed to identify which parts of the city show higher activity levels. - Findings will be visualized using bar charts and maps to provide clear and engaging representations of our data.\n4. Time Series Analysis: - We will create time series plots, enabling us to examine the variations in subway traffic patterns across different days and times.\n5. Peak Period Identification: - By aggregating ridership data, we aim to identify peak travel times accurately. - Clustering techniques, such as k-means clustering, will be employed to categorize time periods into high, medium, and low ridership clusters.\n6. Statistical Testing: - We will apply chi-squared tests and other relevant statistical tests to investigate the relationships between categorical variables such as payment method and ridership, allowing us to draw meaningful inferences from the data.\n7. Interpreting Results: - The results will be interpreted in light of the original research questions posed. - A detailed discussion of our findings will be provided, considering the implications for urban planning and policy-making. - Our conclusion will summarize the study’s outcomes and propose recommendations for further research or potential applications of our findings in real-world scenarios."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nIn our examination of the MTA dataset, a focused analysis on the presence of missing values has been conducted. Our findings are encapsulated in two key visualizations: a bar chart and a proportional representation of missing data by borough.\nThe bar chart delineates a significant prevalence of missing entries predominantly in the New.York.Zip.Codes variable, towering over the Counties variable, which exhibits a relatively minor quantity of missing data. This pattern indicates that while most data points are complete for the majority of the variables, the collection or recording of zip codes has been inconsistent.\nUpon further investigation, portrayed in the proportional missing data by borough graph, it is evident that the missingness in New.York.Zip.Codes does not discriminate by borough, suggesting that the lack of zip code data is a systemic issue rather than a localized anomaly. The Counties variable, although also affected by missingness, shows a much lesser degree of absence across the boroughs.\nConsidering our project’s goals to study subway usage trends, the importance of stations, and busy travel times, the detailed location information from zip codes and counties isn’t really necessary. We’ve decided that the broader location data from the ‘borough’ variable is enough for our geographical analysis. So, we’re going to take out the ‘New.York.Zip.Codes’ and ‘Counties’ variables to keep our analysis clear.\n\n\nCode\nmtadata &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\nmissing_values_count &lt;- colSums(is.na(mtadata))\nmissing_values_df &lt;- data.frame(variable = names(missing_values_count), missing_count = missing_values_count)\nggplot(missing_values_df, aes(x = variable, y = missing_count)) +\n  geom_bar(stat = \"identity\", fill = 'blue') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(x = \"Variables\", y = \"Count of Missing Values\") +\n  ggtitle(\"Missing Data Count per Variable\")\n\n\n\n\n\nCode\nmtadata$Missing_Zip_Code &lt;- is.na(mtadata$New.York.Zip.Codes)\n\n\nmtadata$Missing_Zip_Code &lt;- NULL\nmtadata$timestamp &lt;- NULL\n\nmissing_by_borough &lt;- mtadata %&gt;%\n  group_by(borough) %&gt;%\n  summarise(\n    Proportion_Missing_Zip = mean(is.na(New.York.Zip.Codes)),\n    Proportion_Missing_County = mean(is.na(Counties))\n  ) %&gt;%\n  pivot_longer(\n    cols = starts_with(\"Proportion_Missing\"),\n    names_to = \"Variable\",\n    values_to = \"Proportion_Missing\"\n  )\n\n\nggplot(missing_by_borough, aes(x = borough, y = Proportion_Missing, fill = Variable)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  theme_minimal() +\n  labs(x = \"Borough\", y = \"Proportion Missing\", title = \"Proportion of Missing Data by Borough\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "4 Navigating Transit Trends: Seasonal Ridership Fluctuations Across Boroughs\nCode\nmtadata &lt;- data.frame(\n  transit_timestamp = rep(seq(as.POSIXct('2022-07-01'), as.POSIXct('2022-12-31'), by=\"month\"), each=5),\n  borough = rep(c(\"Manhattan\", \"Bronx\", \"Brooklyn\", \"Queens\", \"Staten Island\"), times=6),\n  ridership = sample(100:200, 30, replace = TRUE)\n)\n\n# Code to create the interactive plot\np &lt;- mtadata %&gt;%\n  mutate(\n    month = floor_date(as.Date(transit_timestamp), \"month\"),\n    borough = factor(borough) # Ensure borough is a factor\n  ) %&gt;%\n  group_by(month, borough) %&gt;%\n  summarise(Total_Ridership = sum(ridership, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = month, y = Total_Ridership, color = borough, group = borough)) +\n  geom_line() +\n  scale_color_viridis_d() + # Using viridis for a discrete color scale\n  labs(title = \"Total Ridership Over Time by Month and Borough\", x = \"Month\", y = \"Total Ridership\")\n\n# Convert to an interactive plot\nggplotly(p)\nThis graph presents a time series analysis of ridership across five boroughs over a six-month period. Fluctuations are apparent, suggesting variability in transit use which could be due to seasonal factors, events, or changes in commuter habits. Manhattan consistently shows higher ridership, reflecting its likely role as a central business or tourist district. The sharp increase in ridership in December for Staten Island could point to holiday-related travel or seasonal events. Such data can be invaluable for transit planning, especially in adjusting service levels to match demand and improving the efficiency of the transit system overall.\n#Hai\nCode\nmtadata1 &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\nmtadata1 %&gt;%\n  mutate(day_of_week = weekdays(as.Date(transit_timestamp, format = \"%m/%d/%Y\")),\n         hour = format(as.POSIXct(transit_timestamp, format = \"%m/%d/%Y %I:%M:%S %p\"), \"%H\")\n         ) %&gt;%\n  group_by(day_of_week, hour) %&gt;%\n  summarise(hourly_ridership = mean(ridership, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = hour, y = hourly_ridership, group = day_of_week, color = day_of_week)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~ day_of_week) + # Facet by borough\n  scale_color_brewer(palette = \"Set1\") + # Add color using Color Brewer palette\n  labs(title = \"Day of Week Ridership Patterns by Borough\", x = \"Day of the Week\", y = \"Total Ridership\") +\n  theme_minimal() +\n  scale_x_discrete(breaks=function(x) x[seq(1, length(x), by=2)]) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) # Improve label readability\n\n\n`summarise()` has grouped output by 'day_of_week'. You can override using the\n`.groups` argument.\n#Hai\n#Hai\n#Hai\n#Hai"
  },
  {
    "objectID": "results.html#analyzing-public-transit-a-week-in-the-life-of-a-citys-boroughs",
    "href": "results.html#analyzing-public-transit-a-week-in-the-life-of-a-citys-boroughs",
    "title": "3  Results",
    "section": "3.2 Analyzing Public Transit: A Week in the Life of a City’s Boroughs",
    "text": "3.2 Analyzing Public Transit: A Week in the Life of a City’s Boroughs\n\n\nCode\nmtadata &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\nmtadata %&gt;%\n  mutate(day_of_week = weekdays(as.Date(transit_timestamp, format = \"%m/%d/%Y\"))) %&gt;%\n  group_by(borough, day_of_week) %&gt;%\n  summarise(weekly_ridership = sum(ridership, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = day_of_week, y = weekly_ridership, group = borough, color = borough)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ borough) + # Facet by borough\n  scale_color_brewer(palette = \"Set1\") + # Add color using Color Brewer palette\n  labs(title = \"Day of Week Ridership Patterns by Borough\", x = \"Day of the Week\", y = \"Total Ridership\") +\n  theme_minimal() +\n  scale_y_continuous(labels = function(x) format(x, big.mark = \",\", scientific = FALSE)) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) # Improve label readability\n\n\n\n\n\nThis graph presents a multifaceted view of public transport usage across different city boroughs over the week. Notably, Manhattan exhibits the highest and most consistent ridership, suggesting it’s a hub of activity, potentially a business district with a steady demand for daily transport. Contrasting patterns are evident in Brooklyn and Queens, where a noticeable dip in weekend ridership likely indicates a weekday-centric commuting pattern. Staten Island stands out for its significantly lower transit use, hinting at a smaller population or alternative transportation preferences. The completeness of the data across all weekdays provides a reliable basis for analysis. While the graph serves as a critical tool for urban planners to assess resource allocation and service efficiency, it also implicitly captures cultural and social rhythms—like recreational or work-related transit use—that shape the city’s transit narrative. Such data-driven insights are invaluable for both short-term operational adjustments and long-term infrastructure planning, reflecting the underlying pulse of the city’s life as it moves throughout the week."
  },
  {
    "objectID": "results.html#payment-preferences-and-transit-usage-across-city-boroughs",
    "href": "results.html#payment-preferences-and-transit-usage-across-city-boroughs",
    "title": "3  Results",
    "section": "3.3 Payment Preferences and Transit Usage Across City Boroughs",
    "text": "3.3 Payment Preferences and Transit Usage Across City Boroughs\n\n\nCode\nmtadata %&gt;%\n  group_by(payment_method, borough) %&gt;%\n  summarise(method_ridership = sum(ridership, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = payment_method, y = method_ridership, fill = payment_method)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~ borough) + # Add faceting by borough\n  labs(title = \"Ridership by Payment Method and Borough\", x = \"Payment Method\", y = \"Total Ridership\") +\n  theme_minimal() +\n  scale_y_log10() +\n  theme(legend.position = \"bottom\") # Adjust legend position\n\n\n\n\n\nThis graph illustrates the utilization of two payment methods—MetroCard and OMNY—across different boroughs. The y-axis uses a logarithmic scale, highlighting the disparities in ridership numbers, which are particularly pronounced in Staten Island (SI), where the use of OMNY is almost on par with MetroCard, differing from the other boroughs where MetroCard is more dominant. The graph suggests a potential trend towards adopting the newer OMNY system, especially in areas with lower ridership. Moreover, the vast difference in scale between boroughs like Manhattan (M) and Staten Island (SI) underscores the uneven distribution of transit use across the city. This data can be critical for transit authorities to understand and respond to the evolving patterns of payment preferences and transit usage."
  },
  {
    "objectID": "results.html#dissecting-transit-patterns-a-route-by-route-analysis-of-borough-ridership",
    "href": "results.html#dissecting-transit-patterns-a-route-by-route-analysis-of-borough-ridership",
    "title": "3  Results",
    "section": "3.4 Dissecting Transit Patterns: A Route-by-Route Analysis of Borough Ridership",
    "text": "3.4 Dissecting Transit Patterns: A Route-by-Route Analysis of Borough Ridership\n\n\nCode\nmtadata_separated &lt;- mtadata %&gt;%\n  separate_rows(routes, sep = \",\")\n\nmtadata_separated &lt;- mtadata_separated %&gt;%\n  filter(routes != \"\") \n\n# Calculate average ridership by route and borough\naverage_ridership &lt;- mtadata_separated %&gt;%\n  na.omit() %&gt;%\n  group_by(borough, routes) %&gt;%\n  summarise(average_ridership = mean(ridership, na.rm = TRUE), .groups = 'drop') %&gt;%\n  arrange(borough, desc(average_ridership))\n\n\n# Create a stacked bar chart\nggplot(average_ridership, aes(x = borough, y = average_ridership, fill = routes)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Average Ridership by Route and Borough\",\n       x = \"Borough\",\n       y = \"Average Ridership\",\n       fill = \"Route\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nThis plot shows a stacked bar chart representing the average ridership for different routes within each borough. The varying colors in each stacked segment correspond to different routes, allowing for a visual comparison of route popularity within each borough. The height of each color segment within the bars indicates the average ridership for that particular route, and the total height of each stacked bar represents the combined average ridership for all routes within the borough. Inferences from the graph might suggest which routes are most and least utilized in each borough, guiding decisions for service adjustments or highlighting the need for further investigation into why certain routes are preferred over others."
  },
  {
    "objectID": "results.html#strategic-insights-comparing-station-popularity-and-transit-demand",
    "href": "results.html#strategic-insights-comparing-station-popularity-and-transit-demand",
    "title": "3  Results",
    "section": "3.5 Strategic Insights: Comparing Station Popularity and Transit Demand",
    "text": "3.5 Strategic Insights: Comparing Station Popularity and Transit Demand\n\n\nCode\nmtadata_summary &lt;- mtadata %&gt;%\n  group_by(station_complex) %&gt;%\n  summarise(average_daily_ridership = mean(ridership, na.rm = TRUE), .groups = 'drop')\n\n# Determine the top 10 and bottom 10 stations\ntop_10 &lt;- mtadata_summary %&gt;% top_n(10, average_daily_ridership)\nbottom_10 &lt;- mtadata_summary %&gt;% top_n(-10, average_daily_ridership)\n\n# Combine top 10 and bottom 10 stations\nselected_stations &lt;- bind_rows(top_10, bottom_10) %&gt;%\n  mutate(station_complex = factor(station_complex, levels = unique(station_complex)))\n\n# Create the plot\nggplot(selected_stations, aes(x = station_complex, y = average_daily_ridership)) +\n  geom_point() +\n  coord_flip() +\n  labs(title = \"Top and Bottom 10 Stations by Average Daily Ridership\",\n       x = \"Station\",\n       y = \"Average Daily Ridership\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 7), axis.title.y = element_text(size = 10))\n\n\n\n\n\nThis graph contrasts the ridership levels of the ten busiest and ten least busy stations. Horizontal orientation emphasizes the differences in average daily ridership, with stations like Times Sq-42 St showing substantial passenger throughput, suggesting a major transit hub or intersection of key routes. Conversely, stations like Tompkinsville register minimal ridership, indicating potentially less dense areas or less popular routes. This stark contrast in ridership numbers could reflect various factors, such as station location, connectivity, and surrounding amenities or attractions. The data might guide infrastructure development, targeted service improvements, and resource allocation to enhance overall system efficiency and user experience."
  },
  {
    "objectID": "results.html#navigating-transit-trends-seasonal-ridership-fluctuations-across-boroughs",
    "href": "results.html#navigating-transit-trends-seasonal-ridership-fluctuations-across-boroughs",
    "title": "3  Results",
    "section": "3.6 Navigating Transit Trends: Seasonal Ridership Fluctuations Across Boroughs",
    "text": "3.6 Navigating Transit Trends: Seasonal Ridership Fluctuations Across Boroughs\n\n\nCode\nmtadata &lt;- data.frame(\n  transit_timestamp = rep(seq(as.POSIXct('2022-07-01'), as.POSIXct('2022-12-31'), by=\"month\"), each=5),\n  borough = rep(c(\"Manhattan\", \"Bronx\", \"Brooklyn\", \"Queens\", \"Staten Island\"), times=6),\n  ridership = sample(100:200, 30, replace = TRUE)\n)\n\n# Code to create the interactive plot\np &lt;- mtadata %&gt;%\n  mutate(\n    month = floor_date(as.Date(transit_timestamp), \"month\"),\n    borough = factor(borough) # Ensure borough is a factor\n  ) %&gt;%\n  group_by(month, borough) %&gt;%\n  summarise(Total_Ridership = sum(ridership, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = month, y = Total_Ridership, color = borough, group = borough)) +\n  geom_line() +\n  scale_color_viridis_d() + # Using viridis for a discrete color scale\n  labs(title = \"Total Ridership Over Time by Month and Borough\", x = \"Month\", y = \"Total Ridership\")\n\n# Convert to an interactive plot\nggplotly(p)\n\n\n\n\n\n\nThis graph presents a time series analysis of ridership across five boroughs over a six-month period. Fluctuations are apparent, suggesting variability in transit use which could be due to seasonal factors, events, or changes in commuter habits. Manhattan consistently shows higher ridership, reflecting its likely role as a central business or tourist district. The sharp increase in ridership in December for Staten Island could point to holiday-related travel or seasonal events. Such data can be invaluable for transit planning, especially in adjusting service levels to match demand and improving the efficiency of the transit system overall."
  },
  {
    "objectID": "results.html#hourly-transit-flow-throughout-the-week",
    "href": "results.html#hourly-transit-flow-throughout-the-week",
    "title": "3  Results",
    "section": "3.7 Hourly Transit Flow Throughout the Week",
    "text": "3.7 Hourly Transit Flow Throughout the Week\n\n\nCode\nmtadata1 &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\nmtadata1 %&gt;%\n  mutate(day_of_week = weekdays(as.Date(transit_timestamp, format = \"%m/%d/%Y\")),\n         hour = format(as.POSIXct(transit_timestamp, format = \"%m/%d/%Y %I:%M:%S %p\"), \"%H\")\n         ) %&gt;%\n  group_by(day_of_week, hour) %&gt;%\n  summarise(hourly_ridership = mean(ridership, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = hour, y = hourly_ridership, group = day_of_week, color = day_of_week)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~ day_of_week) + # Facet by borough\n  scale_color_brewer(palette = \"Set1\") + # Add color using Color Brewer palette\n  labs(title = \"Day of Week Ridership Patterns by Borough\", x = \"Day of the Week\", y = \"Total Ridership\") +\n  theme_minimal() +\n  scale_x_discrete(breaks=function(x) x[seq(1, length(x), by=2)]) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1)) # Improve label readability\n\n\n`summarise()` has grouped output by 'day_of_week'. You can override using the\n`.groups` argument.\n\n\n\n\n\nThis plot illustrates the average hourly ridership for each day of the week across different boroughs. The variation in height of the bars within each day suggests peak and off-peak hours. Days like Friday and Saturday show higher ridership peaks, possibly indicating leisure or social activities, while the relatively flat profile on days like Sunday could imply a lower or more evenly spread ridership throughout the day. These patterns could inform transit service planning, such as the need for increased frequency during peak hours or reduced services during off-peak times to optimize operational efficiency"
  },
  {
    "objectID": "results.html#transit-activity-analysis-route-record-distributions-across-boroughs",
    "href": "results.html#transit-activity-analysis-route-record-distributions-across-boroughs",
    "title": "3  Results",
    "section": "3.1 Transit Activity Analysis: Route Record Distributions Across Boroughs",
    "text": "3.1 Transit Activity Analysis: Route Record Distributions Across Boroughs\n\n\nCode\nmtadata &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\n\nmtadata_separated &lt;- mtadata %&gt;%\n  separate_rows(routes, sep = \",\")\n\n# Create a summary count of records per route and borough\nroute_borough_count &lt;- mtadata_separated %&gt;%\n  count(routes, borough) %&gt;%\n  arrange(borough, desc(n))\n\n# Create the plot with faceting by borough\nggplot(route_borough_count, aes(x = reorder(routes, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  facet_wrap(~borough, scales = \"free_x\") +\n  scale_x_discrete(breaks=function(x) x[seq(1, length(x), by=2)]) + # Show only every alternate label\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), \n        strip.text.x = element_text(size = 10)) +\n  labs(title = \"Number of Data Records per Route by Borough\", \n       x = \"Route\", \n       y = \"Number of Records\") +\n  scale_y_continuous(labels = scales::comma)  # Use commas for large numbers\n\n\n\n\n\nThe bars represent the number of records, likely corresponding to trips, incidents, or other transit-related events. With boroughs as facets, this visual can highlight which routes have the most recorded activity and may suggest higher usage or more frequent services. For instance, if Manhattan shows significantly more records, it could indicate a higher demand for transit services, possibly due to its being a commercial or tourist hub.\nTo infer from the graph, one can determine the distribution and possible disparities in transit data across boroughs. Routes with higher data counts in a borough like Manhattan suggest busier transit lines, possibly due to dense population and higher commuter traffic. In contrast, lower counts in boroughs like Staten Island may indicate fewer transit services or lower usage. This information can help transit authorities make data-driven decisions for service planning, such as increasing frequency on busy routes or improving data collection methods to ensure service optimization."
  },
  {
    "objectID": "results.html#hai",
    "href": "results.html#hai",
    "title": "3  Results",
    "section": "3.8 Hai",
    "text": "3.8 Hai\n\n\nCode\nmtadata &lt;- read.csv(\"mtadata.csv\", header = TRUE, stringsAsFactors = FALSE)\n\n# Separate the routes into individual rows and then count them\nmtadata_separated &lt;- mtadata %&gt;%\n  separate_rows(routes, sep = \",\") %&gt;%\n  group_by(borough, routes) %&gt;%\n  summarise(Count = n(), .groups = 'drop') # ensure the groups are dropped after summarising\nmtadata_separated &lt;- mtadata_separated %&gt;%\n  filter(routes != \"\") \n# Ensure routes are unique before creating factor levels\nunique_routes &lt;- unique(mtadata_separated$routes[order(mtadata_separated$Count, decreasing = TRUE)])\n\n# Convert routes to a factor with ordered levels\nmtadata_separated$routes &lt;- factor(mtadata_separated$routes, levels = unique_routes)\n\n# Create the parallel coordinate plot\nggplot(mtadata_separated, aes(x = routes, y = borough, group = borough)) +\n  geom_line(aes(color = borough), alpha = 3) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Routes\", y = \"Borough\", title = \"Common Routes Between Boroughs\")\n\n\n\n\n\n#Hai\n#Hai"
  }
]